# This is a basic workflow to show the manual trigger
name: Manual-Actions-Workflow

on: 
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'
      instance:
        description: Instance URL or name from config.yaml
        required: true
      region:
        description: 'Region metadata expected (na, emea, apac)'
        required: true
        default: na
      instanceType:
        description: 'Instance type (stg, dev)'
        required: true
        default: prod
         push   
jobs:
 
 build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
   
    - name: Say something
      run: echo "${{github.event.inputs.instanceType }}"
    
    - run: |
        echo "Log level: ${{ github.event.inputs.logLevel }}"
        echo "Tags: ${{ github.event.inputs.tags }}"
        echo "github.event.inputs.instanceType"
    - name: Approval 
      if: github.event.inputs.instanceType == 'dev'
      uses: trstringer/manual-approval@v1.9.0
      with:
        # Required approvers
        approvers: Erage
        # Secret
        secret:  ${{github.TOKEN}}
        # Minimum number of approvals to progress workflow
        minimum-approvals: 1 # optional
        # The custom subtitle for the issue
        issue-title:  testing the Approval process  # optional
        # The custom body for the issue
        issue-body:  testing the Approval process  # optional
        # Whether or not to filter out the user who initiated the workflow as an approver if they are in the approvers list
        exclude-workflow-initiator-as-approver: false # optional
        # Comma separated list of words that can be used to approve beyond the defaults.
    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        # Optional. Commit message for the created commit.
        # Defaults to "Apply automatic changes"
        commit_message: Automated Change

        # Optional. Local and remote branch name where commit is going to be pushed
        #  to. Defaults to the current branch.
        #  You might need to set `create_branch: true` if the branch does not exist.
        branch: Erage/HKOSCon2020


        # Optional. Options used by `git-commit`.
        # See https://git-scm.com/docs/git-commit#_options
        commit_options: '--no-verify --signoff'

        # Optional glob pattern of files which should be added to the commit
        # Defaults to all (.)
        # See the `pathspec`-documentation for git
        # - https://git-scm.com/docs/git-add#Documentation/git-add.txt-ltpathspecgt82308203
        # - https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec
        file_pattern: '*.php src/*.js tests/*.js'

        # Optional. Local file path to the repository.
        # Defaults to the root of the repository.
        repository: .

        # Optional commit user and author settings
        commit_user_name: My GitHub Actions Bot # defaults to "github-actions[bot]"
        commit_user_email: my-github-actions-bot@example.org # defaults to "41898282+github-actions[bot]@users.noreply.github.com"
        commit_author: Author <actions@github.com> # defaults to author of the commit that triggered the run

        # Optional. Tag name being created in the local repository and 
        # pushed to remote repository and defined branch.
        tagging_message: 'v1.0.0'

        # Optional. Option used by `git-status` to determine if the repository is 
        # dirty. See https://git-scm.com/docs/git-status#_options
        status_options: '--untracked-files=no'

        # Optional. Options used by `git-add`.
        # See https://git-scm.com/docs/git-add#_options
        add_options: '-u'

        # Optional. Options used by `git-push`.
        # See https://git-scm.com/docs/git-push#_options
        push_options: '--force'

        # Optional. Disable dirty check and always try to create a commit and push
        skip_dirty_check: true    

        # Optional. Skip internal call to `git fetch`
        skip_fetch: true    

        # Optional. Skip internal call to `git checkout`
        skip_checkout: true

        # Optional. Prevents the shell from expanding filenames. 
        # Details: https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html
        disable_globbing: true

        # Optional. Create given branch name in local and remote repository.
        create_branch: true       

